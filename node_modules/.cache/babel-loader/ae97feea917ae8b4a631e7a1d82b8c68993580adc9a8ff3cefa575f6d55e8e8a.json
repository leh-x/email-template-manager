{"ast":null,"code":"import { MenuItemBase, newMenu } from './base.js';\nimport { invoke } from '../core.js';\nimport { transformImage } from '../image.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/**\n * A native Icon to be used for the menu item\n *\n * #### Platform-specific:\n *\n * - **Windows / Linux**: Unsupported.\n */\nvar NativeIcon;\n(function (NativeIcon) {\n  /** An add item template image. */\n  NativeIcon[\"Add\"] = \"Add\";\n  /** Advanced preferences toolbar icon for the preferences window. */\n  NativeIcon[\"Advanced\"] = \"Advanced\";\n  /** A Bluetooth template image. */\n  NativeIcon[\"Bluetooth\"] = \"Bluetooth\";\n  /** Bookmarks image suitable for a template. */\n  NativeIcon[\"Bookmarks\"] = \"Bookmarks\";\n  /** A caution image. */\n  NativeIcon[\"Caution\"] = \"Caution\";\n  /** A color panel toolbar icon. */\n  NativeIcon[\"ColorPanel\"] = \"ColorPanel\";\n  /** A column view mode template image. */\n  NativeIcon[\"ColumnView\"] = \"ColumnView\";\n  /** A computer icon. */\n  NativeIcon[\"Computer\"] = \"Computer\";\n  /** An enter full-screen mode template image. */\n  NativeIcon[\"EnterFullScreen\"] = \"EnterFullScreen\";\n  /** Permissions for all users. */\n  NativeIcon[\"Everyone\"] = \"Everyone\";\n  /** An exit full-screen mode template image. */\n  NativeIcon[\"ExitFullScreen\"] = \"ExitFullScreen\";\n  /** A cover flow view mode template image. */\n  NativeIcon[\"FlowView\"] = \"FlowView\";\n  /** A folder image. */\n  NativeIcon[\"Folder\"] = \"Folder\";\n  /** A burnable folder icon. */\n  NativeIcon[\"FolderBurnable\"] = \"FolderBurnable\";\n  /** A smart folder icon. */\n  NativeIcon[\"FolderSmart\"] = \"FolderSmart\";\n  /** A link template image. */\n  NativeIcon[\"FollowLinkFreestanding\"] = \"FollowLinkFreestanding\";\n  /** A font panel toolbar icon. */\n  NativeIcon[\"FontPanel\"] = \"FontPanel\";\n  /** A `go back` template image. */\n  NativeIcon[\"GoLeft\"] = \"GoLeft\";\n  /** A `go forward` template image. */\n  NativeIcon[\"GoRight\"] = \"GoRight\";\n  /** Home image suitable for a template. */\n  NativeIcon[\"Home\"] = \"Home\";\n  /** An iChat Theater template image. */\n  NativeIcon[\"IChatTheater\"] = \"IChatTheater\";\n  /** An icon view mode template image. */\n  NativeIcon[\"IconView\"] = \"IconView\";\n  /** An information toolbar icon. */\n  NativeIcon[\"Info\"] = \"Info\";\n  /** A template image used to denote invalid data. */\n  NativeIcon[\"InvalidDataFreestanding\"] = \"InvalidDataFreestanding\";\n  /** A generic left-facing triangle template image. */\n  NativeIcon[\"LeftFacingTriangle\"] = \"LeftFacingTriangle\";\n  /** A list view mode template image. */\n  NativeIcon[\"ListView\"] = \"ListView\";\n  /** A locked padlock template image. */\n  NativeIcon[\"LockLocked\"] = \"LockLocked\";\n  /** An unlocked padlock template image. */\n  NativeIcon[\"LockUnlocked\"] = \"LockUnlocked\";\n  /** A horizontal dash, for use in menus. */\n  NativeIcon[\"MenuMixedState\"] = \"MenuMixedState\";\n  /** A check mark template image, for use in menus. */\n  NativeIcon[\"MenuOnState\"] = \"MenuOnState\";\n  /** A MobileMe icon. */\n  NativeIcon[\"MobileMe\"] = \"MobileMe\";\n  /** A drag image for multiple items. */\n  NativeIcon[\"MultipleDocuments\"] = \"MultipleDocuments\";\n  /** A network icon. */\n  NativeIcon[\"Network\"] = \"Network\";\n  /** A path button template image. */\n  NativeIcon[\"Path\"] = \"Path\";\n  /** General preferences toolbar icon for the preferences window. */\n  NativeIcon[\"PreferencesGeneral\"] = \"PreferencesGeneral\";\n  /** A Quick Look template image. */\n  NativeIcon[\"QuickLook\"] = \"QuickLook\";\n  /** A refresh template image. */\n  NativeIcon[\"RefreshFreestanding\"] = \"RefreshFreestanding\";\n  /** A refresh template image. */\n  NativeIcon[\"Refresh\"] = \"Refresh\";\n  /** A remove item template image. */\n  NativeIcon[\"Remove\"] = \"Remove\";\n  /** A reveal contents template image. */\n  NativeIcon[\"RevealFreestanding\"] = \"RevealFreestanding\";\n  /** A generic right-facing triangle template image. */\n  NativeIcon[\"RightFacingTriangle\"] = \"RightFacingTriangle\";\n  /** A share view template image. */\n  NativeIcon[\"Share\"] = \"Share\";\n  /** A slideshow template image. */\n  NativeIcon[\"Slideshow\"] = \"Slideshow\";\n  /** A badge for a `smart` item. */\n  NativeIcon[\"SmartBadge\"] = \"SmartBadge\";\n  /** Small green indicator, similar to iChat's available image. */\n  NativeIcon[\"StatusAvailable\"] = \"StatusAvailable\";\n  /** Small clear indicator. */\n  NativeIcon[\"StatusNone\"] = \"StatusNone\";\n  /** Small yellow indicator, similar to iChat's idle image. */\n  NativeIcon[\"StatusPartiallyAvailable\"] = \"StatusPartiallyAvailable\";\n  /** Small red indicator, similar to iChat's unavailable image. */\n  NativeIcon[\"StatusUnavailable\"] = \"StatusUnavailable\";\n  /** A stop progress template image. */\n  NativeIcon[\"StopProgressFreestanding\"] = \"StopProgressFreestanding\";\n  /** A stop progress button template image. */\n  NativeIcon[\"StopProgress\"] = \"StopProgress\";\n  /** An image of the empty trash can. */\n  NativeIcon[\"TrashEmpty\"] = \"TrashEmpty\";\n  /** An image of the full trash can. */\n  NativeIcon[\"TrashFull\"] = \"TrashFull\";\n  /** Permissions for a single user. */\n  NativeIcon[\"User\"] = \"User\";\n  /** User account toolbar icon for the preferences window. */\n  NativeIcon[\"UserAccounts\"] = \"UserAccounts\";\n  /** Permissions for a group of users. */\n  NativeIcon[\"UserGroup\"] = \"UserGroup\";\n  /** Permissions for guests. */\n  NativeIcon[\"UserGuest\"] = \"UserGuest\";\n})(NativeIcon || (NativeIcon = {}));\n/**\n * An icon menu item inside a {@linkcode Menu} or {@linkcode Submenu}\n * and usually contains an icon and a text.\n */\nclass IconMenuItem extends MenuItemBase {\n  /** @ignore */\n  constructor(rid, id) {\n    super(rid, id, 'Icon');\n  }\n  /** Create a new icon menu item. */\n  static async new(opts) {\n    return newMenu('Icon', opts).then(([rid, id]) => new IconMenuItem(rid, id));\n  }\n  /** Returns the text of this icon menu item. */\n  async text() {\n    return invoke('plugin:menu|text', {\n      rid: this.rid,\n      kind: this.kind\n    });\n  }\n  /** Sets the text for this icon menu item. */\n  async setText(text) {\n    return invoke('plugin:menu|set_text', {\n      rid: this.rid,\n      kind: this.kind,\n      text\n    });\n  }\n  /** Returns whether this icon menu item is enabled or not. */\n  async isEnabled() {\n    return invoke('plugin:menu|is_enabled', {\n      rid: this.rid,\n      kind: this.kind\n    });\n  }\n  /** Sets whether this icon menu item is enabled or not. */\n  async setEnabled(enabled) {\n    return invoke('plugin:menu|set_enabled', {\n      rid: this.rid,\n      kind: this.kind,\n      enabled\n    });\n  }\n  /** Sets the accelerator for this icon menu item. */\n  async setAccelerator(accelerator) {\n    return invoke('plugin:menu|set_accelerator', {\n      rid: this.rid,\n      kind: this.kind,\n      accelerator\n    });\n  }\n  /** Sets an icon for this icon menu item */\n  async setIcon(icon) {\n    return invoke('plugin:menu|set_icon', {\n      rid: this.rid,\n      icon: transformImage(icon)\n    });\n  }\n}\nexport { IconMenuItem, NativeIcon };","map":{"version":3,"names":["MenuItemBase","newMenu","invoke","transformImage","NativeIcon","IconMenuItem","constructor","rid","id","new","opts","then","text","kind","setText","isEnabled","setEnabled","enabled","setAccelerator","accelerator","setIcon","icon"],"sources":["C:/Users/lhaveman/email-generator/node_modules/@tauri-apps/api/menu/iconMenuItem.js"],"sourcesContent":["import { MenuItemBase, newMenu } from './base.js';\nimport { invoke } from '../core.js';\nimport { transformImage } from '../image.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/**\n * A native Icon to be used for the menu item\n *\n * #### Platform-specific:\n *\n * - **Windows / Linux**: Unsupported.\n */\nvar NativeIcon;\n(function (NativeIcon) {\n    /** An add item template image. */\n    NativeIcon[\"Add\"] = \"Add\";\n    /** Advanced preferences toolbar icon for the preferences window. */\n    NativeIcon[\"Advanced\"] = \"Advanced\";\n    /** A Bluetooth template image. */\n    NativeIcon[\"Bluetooth\"] = \"Bluetooth\";\n    /** Bookmarks image suitable for a template. */\n    NativeIcon[\"Bookmarks\"] = \"Bookmarks\";\n    /** A caution image. */\n    NativeIcon[\"Caution\"] = \"Caution\";\n    /** A color panel toolbar icon. */\n    NativeIcon[\"ColorPanel\"] = \"ColorPanel\";\n    /** A column view mode template image. */\n    NativeIcon[\"ColumnView\"] = \"ColumnView\";\n    /** A computer icon. */\n    NativeIcon[\"Computer\"] = \"Computer\";\n    /** An enter full-screen mode template image. */\n    NativeIcon[\"EnterFullScreen\"] = \"EnterFullScreen\";\n    /** Permissions for all users. */\n    NativeIcon[\"Everyone\"] = \"Everyone\";\n    /** An exit full-screen mode template image. */\n    NativeIcon[\"ExitFullScreen\"] = \"ExitFullScreen\";\n    /** A cover flow view mode template image. */\n    NativeIcon[\"FlowView\"] = \"FlowView\";\n    /** A folder image. */\n    NativeIcon[\"Folder\"] = \"Folder\";\n    /** A burnable folder icon. */\n    NativeIcon[\"FolderBurnable\"] = \"FolderBurnable\";\n    /** A smart folder icon. */\n    NativeIcon[\"FolderSmart\"] = \"FolderSmart\";\n    /** A link template image. */\n    NativeIcon[\"FollowLinkFreestanding\"] = \"FollowLinkFreestanding\";\n    /** A font panel toolbar icon. */\n    NativeIcon[\"FontPanel\"] = \"FontPanel\";\n    /** A `go back` template image. */\n    NativeIcon[\"GoLeft\"] = \"GoLeft\";\n    /** A `go forward` template image. */\n    NativeIcon[\"GoRight\"] = \"GoRight\";\n    /** Home image suitable for a template. */\n    NativeIcon[\"Home\"] = \"Home\";\n    /** An iChat Theater template image. */\n    NativeIcon[\"IChatTheater\"] = \"IChatTheater\";\n    /** An icon view mode template image. */\n    NativeIcon[\"IconView\"] = \"IconView\";\n    /** An information toolbar icon. */\n    NativeIcon[\"Info\"] = \"Info\";\n    /** A template image used to denote invalid data. */\n    NativeIcon[\"InvalidDataFreestanding\"] = \"InvalidDataFreestanding\";\n    /** A generic left-facing triangle template image. */\n    NativeIcon[\"LeftFacingTriangle\"] = \"LeftFacingTriangle\";\n    /** A list view mode template image. */\n    NativeIcon[\"ListView\"] = \"ListView\";\n    /** A locked padlock template image. */\n    NativeIcon[\"LockLocked\"] = \"LockLocked\";\n    /** An unlocked padlock template image. */\n    NativeIcon[\"LockUnlocked\"] = \"LockUnlocked\";\n    /** A horizontal dash, for use in menus. */\n    NativeIcon[\"MenuMixedState\"] = \"MenuMixedState\";\n    /** A check mark template image, for use in menus. */\n    NativeIcon[\"MenuOnState\"] = \"MenuOnState\";\n    /** A MobileMe icon. */\n    NativeIcon[\"MobileMe\"] = \"MobileMe\";\n    /** A drag image for multiple items. */\n    NativeIcon[\"MultipleDocuments\"] = \"MultipleDocuments\";\n    /** A network icon. */\n    NativeIcon[\"Network\"] = \"Network\";\n    /** A path button template image. */\n    NativeIcon[\"Path\"] = \"Path\";\n    /** General preferences toolbar icon for the preferences window. */\n    NativeIcon[\"PreferencesGeneral\"] = \"PreferencesGeneral\";\n    /** A Quick Look template image. */\n    NativeIcon[\"QuickLook\"] = \"QuickLook\";\n    /** A refresh template image. */\n    NativeIcon[\"RefreshFreestanding\"] = \"RefreshFreestanding\";\n    /** A refresh template image. */\n    NativeIcon[\"Refresh\"] = \"Refresh\";\n    /** A remove item template image. */\n    NativeIcon[\"Remove\"] = \"Remove\";\n    /** A reveal contents template image. */\n    NativeIcon[\"RevealFreestanding\"] = \"RevealFreestanding\";\n    /** A generic right-facing triangle template image. */\n    NativeIcon[\"RightFacingTriangle\"] = \"RightFacingTriangle\";\n    /** A share view template image. */\n    NativeIcon[\"Share\"] = \"Share\";\n    /** A slideshow template image. */\n    NativeIcon[\"Slideshow\"] = \"Slideshow\";\n    /** A badge for a `smart` item. */\n    NativeIcon[\"SmartBadge\"] = \"SmartBadge\";\n    /** Small green indicator, similar to iChat's available image. */\n    NativeIcon[\"StatusAvailable\"] = \"StatusAvailable\";\n    /** Small clear indicator. */\n    NativeIcon[\"StatusNone\"] = \"StatusNone\";\n    /** Small yellow indicator, similar to iChat's idle image. */\n    NativeIcon[\"StatusPartiallyAvailable\"] = \"StatusPartiallyAvailable\";\n    /** Small red indicator, similar to iChat's unavailable image. */\n    NativeIcon[\"StatusUnavailable\"] = \"StatusUnavailable\";\n    /** A stop progress template image. */\n    NativeIcon[\"StopProgressFreestanding\"] = \"StopProgressFreestanding\";\n    /** A stop progress button template image. */\n    NativeIcon[\"StopProgress\"] = \"StopProgress\";\n    /** An image of the empty trash can. */\n    NativeIcon[\"TrashEmpty\"] = \"TrashEmpty\";\n    /** An image of the full trash can. */\n    NativeIcon[\"TrashFull\"] = \"TrashFull\";\n    /** Permissions for a single user. */\n    NativeIcon[\"User\"] = \"User\";\n    /** User account toolbar icon for the preferences window. */\n    NativeIcon[\"UserAccounts\"] = \"UserAccounts\";\n    /** Permissions for a group of users. */\n    NativeIcon[\"UserGroup\"] = \"UserGroup\";\n    /** Permissions for guests. */\n    NativeIcon[\"UserGuest\"] = \"UserGuest\";\n})(NativeIcon || (NativeIcon = {}));\n/**\n * An icon menu item inside a {@linkcode Menu} or {@linkcode Submenu}\n * and usually contains an icon and a text.\n */\nclass IconMenuItem extends MenuItemBase {\n    /** @ignore */\n    constructor(rid, id) {\n        super(rid, id, 'Icon');\n    }\n    /** Create a new icon menu item. */\n    static async new(opts) {\n        return newMenu('Icon', opts).then(([rid, id]) => new IconMenuItem(rid, id));\n    }\n    /** Returns the text of this icon menu item. */\n    async text() {\n        return invoke('plugin:menu|text', { rid: this.rid, kind: this.kind });\n    }\n    /** Sets the text for this icon menu item. */\n    async setText(text) {\n        return invoke('plugin:menu|set_text', {\n            rid: this.rid,\n            kind: this.kind,\n            text\n        });\n    }\n    /** Returns whether this icon menu item is enabled or not. */\n    async isEnabled() {\n        return invoke('plugin:menu|is_enabled', { rid: this.rid, kind: this.kind });\n    }\n    /** Sets whether this icon menu item is enabled or not. */\n    async setEnabled(enabled) {\n        return invoke('plugin:menu|set_enabled', {\n            rid: this.rid,\n            kind: this.kind,\n            enabled\n        });\n    }\n    /** Sets the accelerator for this icon menu item. */\n    async setAccelerator(accelerator) {\n        return invoke('plugin:menu|set_accelerator', {\n            rid: this.rid,\n            kind: this.kind,\n            accelerator\n        });\n    }\n    /** Sets an icon for this icon menu item */\n    async setIcon(icon) {\n        return invoke('plugin:menu|set_icon', {\n            rid: this.rid,\n            icon: transformImage(icon)\n        });\n    }\n}\n\nexport { IconMenuItem, NativeIcon };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}