{"ast":null,"code":"import React,{useEffect,useState}from'react';import{core}from'@tauri-apps/api';import TemplateCard from'../TemplateCard/TemplateCard';import styles from'./TemplateList.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TemplateList=()=>{const[templates,setTemplates]=useState([]);const[error,setError]=useState(null);const[favourites,setFavourites]=useState({});useEffect(()=>{core.invoke('load_templates').then(setTemplates).catch(err=>{console.error(err);setError('Failed to load templates');});core.invoke('load_favourites').then(setFavourites).catch(err=>{console.error(err);setError('Failed to load favourites');});},[]);// It toggles the favourite status of a file\nconst toggleFavourite=filename=>{const current=!!favourites[filename];// fallback: treat undefined as false\nconst updated={...favourites,[filename]:!current};// flip the value\nsetFavourites(updated);// update UI\ncore.invoke('save_favourites',{favourites:updated});// save to JSON\n};return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsx(\"h2\",{className:styles.heading,children:\"Loaded Templates\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:styles.error,children:error}),templates.map(template=>/*#__PURE__*/_jsx(TemplateCard,{name:template.name,content:template.content,last_modified:template.last_modified,isFavourite:!!favourites[template.name],toggleFavourite:toggleFavourite},template.name))]});};export default TemplateList;","map":{"version":3,"names":["React","useEffect","useState","core","TemplateCard","styles","jsx","_jsx","jsxs","_jsxs","TemplateList","templates","setTemplates","error","setError","favourites","setFavourites","invoke","then","catch","err","console","toggleFavourite","filename","current","updated","className","container","children","heading","map","template","name","content","last_modified","isFavourite"],"sources":["C:/Users/lhaveman/email-generator/src/components/TemplateList/TemplateList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { core } from '@tauri-apps/api';\r\n\r\nimport TemplateCard from '../TemplateCard/TemplateCard';\r\nimport styles from './TemplateList.module.css';\r\n\r\ntype TemplateFile = {\r\n  name: string;\r\n  content: string;\r\n  last_modified: string;\r\n};\r\n\r\nconst TemplateList: React.FC = () => {\r\n  const [templates, setTemplates] = useState<TemplateFile[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [favourites, setFavourites] = useState<Record<string, boolean>>({});\r\n\r\n  useEffect(() => {\r\n    core.invoke<TemplateFile[]>('load_templates')\r\n      .then(setTemplates)\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setError('Failed to load templates');\r\n      });\r\n\r\n    core.invoke<Record<string, boolean>>('load_favourites')\r\n      .then(setFavourites)\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setError('Failed to load favourites');\r\n      });\r\n  }, []);\r\n\r\n    // It toggles the favourite status of a file\r\n    const toggleFavourite = (filename: string) => {\r\n      const current = !!favourites[filename]; // fallback: treat undefined as false\r\n      const updated = { ...favourites, [filename]: !current }; // flip the value\r\n      setFavourites(updated); // update UI\r\n      core.invoke('save_favourites', { favourites: updated }); // save to JSON\r\n    };\r\n\r\n\r\nreturn (\r\n  <div className={styles.container}>\r\n    <h2 className={styles.heading}>Loaded Templates</h2>\r\n    {error && <div className={styles.error}>{error}</div>}\r\n    {templates.map((template) => (\r\n      <TemplateCard\r\n        key={template.name}\r\n        name={template.name}\r\n        content={template.content}\r\n        last_modified={template.last_modified}\r\n        isFavourite={!!favourites[template.name]}\r\n        toggleFavourite={toggleFavourite}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\n};\r\n\r\nexport default TemplateList;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,iBAAiB,CAEtC,MAAO,CAAAC,YAAY,KAAM,8BAA8B,CACvD,MAAO,CAAAC,MAAM,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAQ/C,KAAM,CAAAC,YAAsB,CAAGA,CAAA,GAAM,CACnC,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGV,QAAQ,CAAiB,EAAE,CAAC,CAC9D,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAgB,IAAI,CAAC,CACvD,KAAM,CAACa,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAA0B,CAAC,CAAC,CAAC,CAEzED,SAAS,CAAC,IAAM,CACdE,IAAI,CAACc,MAAM,CAAiB,gBAAgB,CAAC,CAC1CC,IAAI,CAACN,YAAY,CAAC,CAClBO,KAAK,CAAEC,GAAG,EAAK,CACdC,OAAO,CAACR,KAAK,CAACO,GAAG,CAAC,CAClBN,QAAQ,CAAC,0BAA0B,CAAC,CACtC,CAAC,CAAC,CAEJX,IAAI,CAACc,MAAM,CAA0B,iBAAiB,CAAC,CACpDC,IAAI,CAACF,aAAa,CAAC,CACnBG,KAAK,CAAEC,GAAG,EAAK,CACdC,OAAO,CAACR,KAAK,CAACO,GAAG,CAAC,CAClBN,QAAQ,CAAC,2BAA2B,CAAC,CACvC,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEJ;AACA,KAAM,CAAAQ,eAAe,CAAIC,QAAgB,EAAK,CAC5C,KAAM,CAAAC,OAAO,CAAG,CAAC,CAACT,UAAU,CAACQ,QAAQ,CAAC,CAAE;AACxC,KAAM,CAAAE,OAAO,CAAG,CAAE,GAAGV,UAAU,CAAE,CAACQ,QAAQ,EAAG,CAACC,OAAQ,CAAC,CAAE;AACzDR,aAAa,CAACS,OAAO,CAAC,CAAE;AACxBtB,IAAI,CAACc,MAAM,CAAC,iBAAiB,CAAE,CAAEF,UAAU,CAAEU,OAAQ,CAAC,CAAC,CAAE;AAC3D,CAAC,CAGL,mBACEhB,KAAA,QAAKiB,SAAS,CAAErB,MAAM,CAACsB,SAAU,CAAAC,QAAA,eAC/BrB,IAAA,OAAImB,SAAS,CAAErB,MAAM,CAACwB,OAAQ,CAAAD,QAAA,CAAC,kBAAgB,CAAI,CAAC,CACnDf,KAAK,eAAIN,IAAA,QAAKmB,SAAS,CAAErB,MAAM,CAACQ,KAAM,CAAAe,QAAA,CAAEf,KAAK,CAAM,CAAC,CACpDF,SAAS,CAACmB,GAAG,CAAEC,QAAQ,eACtBxB,IAAA,CAACH,YAAY,EAEX4B,IAAI,CAAED,QAAQ,CAACC,IAAK,CACpBC,OAAO,CAAEF,QAAQ,CAACE,OAAQ,CAC1BC,aAAa,CAAEH,QAAQ,CAACG,aAAc,CACtCC,WAAW,CAAE,CAAC,CAACpB,UAAU,CAACgB,QAAQ,CAACC,IAAI,CAAE,CACzCV,eAAe,CAAEA,eAAgB,EAL5BS,QAAQ,CAACC,IAMf,CACF,CAAC,EACC,CAAC,CAGR,CAAC,CAED,cAAe,CAAAtB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}