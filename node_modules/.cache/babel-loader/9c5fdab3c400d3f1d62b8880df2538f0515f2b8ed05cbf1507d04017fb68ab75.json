{"ast":null,"code":"import { MenuItem } from './menuItem.js';\nimport { CheckMenuItem } from './checkMenuItem.js';\nimport { IconMenuItem } from './iconMenuItem.js';\nimport { PredefinedMenuItem } from './predefinedMenuItem.js';\nimport { invoke } from '../core.js';\nimport { MenuItemBase, newMenu } from './base.js';\nimport { Position } from '../dpi.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/** @ignore */\nfunction itemFromKind([rid, id, kind]) {\n  /* eslint-disable @typescript-eslint/no-unsafe-return */\n  switch (kind) {\n    case 'Submenu':\n      // @ts-expect-error constructor is protected for external usage only, safe for us to use\n      return new Submenu(rid, id);\n    case 'Predefined':\n      // @ts-expect-error constructor is protected for external usage only, safe for us to use\n      return new PredefinedMenuItem(rid, id);\n    case 'Check':\n      // @ts-expect-error constructor is protected for external usage only, safe for us to use\n      return new CheckMenuItem(rid, id);\n    case 'Icon':\n      // @ts-expect-error constructor is protected for external usage only, safe for us to use\n      return new IconMenuItem(rid, id);\n    case 'MenuItem':\n    default:\n      // @ts-expect-error constructor is protected for external usage only, safe for us to use\n      return new MenuItem(rid, id);\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-return */\n}\n/** A type that is a submenu inside a {@linkcode Menu} or {@linkcode Submenu}. */\nclass Submenu extends MenuItemBase {\n  /** @ignore */\n  constructor(rid, id) {\n    super(rid, id, 'Submenu');\n  }\n  /** Create a new submenu. */\n  static async new(opts) {\n    return newMenu('Submenu', opts).then(([rid, id]) => new Submenu(rid, id));\n  }\n  /** Returns the text of this submenu. */\n  async text() {\n    return invoke('plugin:menu|text', {\n      rid: this.rid,\n      kind: this.kind\n    });\n  }\n  /** Sets the text for this submenu. */\n  async setText(text) {\n    return invoke('plugin:menu|set_text', {\n      rid: this.rid,\n      kind: this.kind,\n      text\n    });\n  }\n  /** Returns whether this submenu is enabled or not. */\n  async isEnabled() {\n    return invoke('plugin:menu|is_enabled', {\n      rid: this.rid,\n      kind: this.kind\n    });\n  }\n  /** Sets whether this submenu is enabled or not. */\n  async setEnabled(enabled) {\n    return invoke('plugin:menu|set_enabled', {\n      rid: this.rid,\n      kind: this.kind,\n      enabled\n    });\n  }\n  /**\n   * Add a menu item to the end of this submenu.\n   *\n   * #### Platform-specific:\n   *\n   * - **macOS:** Only {@linkcode Submenu}s can be added to a {@linkcode Menu}.\n   */\n  async append(items) {\n    return invoke('plugin:menu|append', {\n      rid: this.rid,\n      kind: this.kind,\n      items: (Array.isArray(items) ? items : [items]).map(i => 'rid' in i ? [i.rid, i.kind] : i)\n    });\n  }\n  /**\n   * Add a menu item to the beginning of this submenu.\n   *\n   * #### Platform-specific:\n   *\n   * - **macOS:** Only {@linkcode Submenu}s can be added to a {@linkcode Menu}.\n   */\n  async prepend(items) {\n    return invoke('plugin:menu|prepend', {\n      rid: this.rid,\n      kind: this.kind,\n      items: (Array.isArray(items) ? items : [items]).map(i => 'rid' in i ? [i.rid, i.kind] : i)\n    });\n  }\n  /**\n   * Add a menu item to the specified position in this submenu.\n   *\n   * #### Platform-specific:\n   *\n   * - **macOS:** Only {@linkcode Submenu}s can be added to a {@linkcode Menu}.\n   */\n  async insert(items, position) {\n    return invoke('plugin:menu|insert', {\n      rid: this.rid,\n      kind: this.kind,\n      items: (Array.isArray(items) ? items : [items]).map(i => 'rid' in i ? [i.rid, i.kind] : i),\n      position\n    });\n  }\n  /** Remove a menu item from this submenu. */\n  async remove(item) {\n    return invoke('plugin:menu|remove', {\n      rid: this.rid,\n      kind: this.kind,\n      item: [item.rid, item.kind]\n    });\n  }\n  /** Remove a menu item from this submenu at the specified position. */\n  async removeAt(position) {\n    return invoke('plugin:menu|remove_at', {\n      rid: this.rid,\n      kind: this.kind,\n      position\n    }).then(itemFromKind);\n  }\n  /** Returns a list of menu items that has been added to this submenu. */\n  async items() {\n    return invoke('plugin:menu|items', {\n      rid: this.rid,\n      kind: this.kind\n    }).then(i => i.map(itemFromKind));\n  }\n  /** Retrieves the menu item matching the given identifier. */\n  async get(id) {\n    return invoke('plugin:menu|get', {\n      rid: this.rid,\n      kind: this.kind,\n      id\n    }).then(r => r ? itemFromKind(r) : null);\n  }\n  /**\n   * Popup this submenu as a context menu on the specified window.\n   *\n   * If the position, is provided, it is relative to the window's top-left corner.\n   */\n  async popup(at, window) {\n    var _a;\n    return invoke('plugin:menu|popup', {\n      rid: this.rid,\n      kind: this.kind,\n      window: (_a = window === null || window === void 0 ? void 0 : window.label) !== null && _a !== void 0 ? _a : null,\n      at: at instanceof Position ? at : at ? new Position(at) : null\n    });\n  }\n  /**\n   * Set this submenu as the Window menu for the application on macOS.\n   *\n   * This will cause macOS to automatically add window-switching items and\n   * certain other items to the menu.\n   *\n   * #### Platform-specific:\n   *\n   * - **Windows / Linux**: Unsupported.\n   */\n  async setAsWindowsMenuForNSApp() {\n    return invoke('plugin:menu|set_as_windows_menu_for_nsapp', {\n      rid: this.rid\n    });\n  }\n  /**\n   * Set this submenu as the Help menu for the application on macOS.\n   *\n   * This will cause macOS to automatically add a search box to the menu.\n   *\n   * If no menu is set as the Help menu, macOS will automatically use any menu\n   * which has a title matching the localized word \"Help\".\n   *\n   * #### Platform-specific:\n   *\n   * - **Windows / Linux**: Unsupported.\n   */\n  async setAsHelpMenuForNSApp() {\n    return invoke('plugin:menu|set_as_help_menu_for_nsapp', {\n      rid: this.rid\n    });\n  }\n}\nexport { Submenu, itemFromKind };","map":{"version":3,"names":["MenuItem","CheckMenuItem","IconMenuItem","PredefinedMenuItem","invoke","MenuItemBase","newMenu","Position","itemFromKind","rid","id","kind","Submenu","constructor","new","opts","then","text","setText","isEnabled","setEnabled","enabled","append","items","Array","isArray","map","i","prepend","insert","position","remove","item","removeAt","get","r","popup","at","window","_a","label","setAsWindowsMenuForNSApp","setAsHelpMenuForNSApp"],"sources":["C:/Users/lhaveman/email-generator/node_modules/@tauri-apps/api/menu/submenu.js"],"sourcesContent":["import { MenuItem } from './menuItem.js';\nimport { CheckMenuItem } from './checkMenuItem.js';\nimport { IconMenuItem } from './iconMenuItem.js';\nimport { PredefinedMenuItem } from './predefinedMenuItem.js';\nimport { invoke } from '../core.js';\nimport { MenuItemBase, newMenu } from './base.js';\nimport { Position } from '../dpi.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/** @ignore */\nfunction itemFromKind([rid, id, kind]) {\n    /* eslint-disable @typescript-eslint/no-unsafe-return */\n    switch (kind) {\n        case 'Submenu':\n            // @ts-expect-error constructor is protected for external usage only, safe for us to use\n            return new Submenu(rid, id);\n        case 'Predefined':\n            // @ts-expect-error constructor is protected for external usage only, safe for us to use\n            return new PredefinedMenuItem(rid, id);\n        case 'Check':\n            // @ts-expect-error constructor is protected for external usage only, safe for us to use\n            return new CheckMenuItem(rid, id);\n        case 'Icon':\n            // @ts-expect-error constructor is protected for external usage only, safe for us to use\n            return new IconMenuItem(rid, id);\n        case 'MenuItem':\n        default:\n            // @ts-expect-error constructor is protected for external usage only, safe for us to use\n            return new MenuItem(rid, id);\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-return */\n}\n/** A type that is a submenu inside a {@linkcode Menu} or {@linkcode Submenu}. */\nclass Submenu extends MenuItemBase {\n    /** @ignore */\n    constructor(rid, id) {\n        super(rid, id, 'Submenu');\n    }\n    /** Create a new submenu. */\n    static async new(opts) {\n        return newMenu('Submenu', opts).then(([rid, id]) => new Submenu(rid, id));\n    }\n    /** Returns the text of this submenu. */\n    async text() {\n        return invoke('plugin:menu|text', { rid: this.rid, kind: this.kind });\n    }\n    /** Sets the text for this submenu. */\n    async setText(text) {\n        return invoke('plugin:menu|set_text', {\n            rid: this.rid,\n            kind: this.kind,\n            text\n        });\n    }\n    /** Returns whether this submenu is enabled or not. */\n    async isEnabled() {\n        return invoke('plugin:menu|is_enabled', { rid: this.rid, kind: this.kind });\n    }\n    /** Sets whether this submenu is enabled or not. */\n    async setEnabled(enabled) {\n        return invoke('plugin:menu|set_enabled', {\n            rid: this.rid,\n            kind: this.kind,\n            enabled\n        });\n    }\n    /**\n     * Add a menu item to the end of this submenu.\n     *\n     * #### Platform-specific:\n     *\n     * - **macOS:** Only {@linkcode Submenu}s can be added to a {@linkcode Menu}.\n     */\n    async append(items) {\n        return invoke('plugin:menu|append', {\n            rid: this.rid,\n            kind: this.kind,\n            items: (Array.isArray(items) ? items : [items]).map((i) => 'rid' in i ? [i.rid, i.kind] : i)\n        });\n    }\n    /**\n     * Add a menu item to the beginning of this submenu.\n     *\n     * #### Platform-specific:\n     *\n     * - **macOS:** Only {@linkcode Submenu}s can be added to a {@linkcode Menu}.\n     */\n    async prepend(items) {\n        return invoke('plugin:menu|prepend', {\n            rid: this.rid,\n            kind: this.kind,\n            items: (Array.isArray(items) ? items : [items]).map((i) => 'rid' in i ? [i.rid, i.kind] : i)\n        });\n    }\n    /**\n     * Add a menu item to the specified position in this submenu.\n     *\n     * #### Platform-specific:\n     *\n     * - **macOS:** Only {@linkcode Submenu}s can be added to a {@linkcode Menu}.\n     */\n    async insert(items, position) {\n        return invoke('plugin:menu|insert', {\n            rid: this.rid,\n            kind: this.kind,\n            items: (Array.isArray(items) ? items : [items]).map((i) => 'rid' in i ? [i.rid, i.kind] : i),\n            position\n        });\n    }\n    /** Remove a menu item from this submenu. */\n    async remove(item) {\n        return invoke('plugin:menu|remove', {\n            rid: this.rid,\n            kind: this.kind,\n            item: [item.rid, item.kind]\n        });\n    }\n    /** Remove a menu item from this submenu at the specified position. */\n    async removeAt(position) {\n        return invoke('plugin:menu|remove_at', {\n            rid: this.rid,\n            kind: this.kind,\n            position\n        }).then(itemFromKind);\n    }\n    /** Returns a list of menu items that has been added to this submenu. */\n    async items() {\n        return invoke('plugin:menu|items', {\n            rid: this.rid,\n            kind: this.kind\n        }).then((i) => i.map(itemFromKind));\n    }\n    /** Retrieves the menu item matching the given identifier. */\n    async get(id) {\n        return invoke('plugin:menu|get', {\n            rid: this.rid,\n            kind: this.kind,\n            id\n        }).then((r) => (r ? itemFromKind(r) : null));\n    }\n    /**\n     * Popup this submenu as a context menu on the specified window.\n     *\n     * If the position, is provided, it is relative to the window's top-left corner.\n     */\n    async popup(at, window) {\n        var _a;\n        return invoke('plugin:menu|popup', {\n            rid: this.rid,\n            kind: this.kind,\n            window: (_a = window === null || window === void 0 ? void 0 : window.label) !== null && _a !== void 0 ? _a : null,\n            at: at instanceof Position ? at : at ? new Position(at) : null\n        });\n    }\n    /**\n     * Set this submenu as the Window menu for the application on macOS.\n     *\n     * This will cause macOS to automatically add window-switching items and\n     * certain other items to the menu.\n     *\n     * #### Platform-specific:\n     *\n     * - **Windows / Linux**: Unsupported.\n     */\n    async setAsWindowsMenuForNSApp() {\n        return invoke('plugin:menu|set_as_windows_menu_for_nsapp', {\n            rid: this.rid\n        });\n    }\n    /**\n     * Set this submenu as the Help menu for the application on macOS.\n     *\n     * This will cause macOS to automatically add a search box to the menu.\n     *\n     * If no menu is set as the Help menu, macOS will automatically use any menu\n     * which has a title matching the localized word \"Help\".\n     *\n     * #### Platform-specific:\n     *\n     * - **Windows / Linux**: Unsupported.\n     */\n    async setAsHelpMenuForNSApp() {\n        return invoke('plugin:menu|set_as_help_menu_for_nsapp', {\n            rid: this.rid\n        });\n    }\n}\n\nexport { Submenu, itemFromKind };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,SAASC,MAAM,QAAQ,YAAY;AACnC,SAASC,YAAY,EAAEC,OAAO,QAAQ,WAAW;AACjD,SAASC,QAAQ,QAAQ,WAAW;;AAEpC;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAAC,CAACC,GAAG,EAAEC,EAAE,EAAEC,IAAI,CAAC,EAAE;EACnC;EACA,QAAQA,IAAI;IACR,KAAK,SAAS;MACV;MACA,OAAO,IAAIC,OAAO,CAACH,GAAG,EAAEC,EAAE,CAAC;IAC/B,KAAK,YAAY;MACb;MACA,OAAO,IAAIP,kBAAkB,CAACM,GAAG,EAAEC,EAAE,CAAC;IAC1C,KAAK,OAAO;MACR;MACA,OAAO,IAAIT,aAAa,CAACQ,GAAG,EAAEC,EAAE,CAAC;IACrC,KAAK,MAAM;MACP;MACA,OAAO,IAAIR,YAAY,CAACO,GAAG,EAAEC,EAAE,CAAC;IACpC,KAAK,UAAU;IACf;MACI;MACA,OAAO,IAAIV,QAAQ,CAACS,GAAG,EAAEC,EAAE,CAAC;EACpC;EACA;AACJ;AACA;AACA,MAAME,OAAO,SAASP,YAAY,CAAC;EAC/B;EACAQ,WAAWA,CAACJ,GAAG,EAAEC,EAAE,EAAE;IACjB,KAAK,CAACD,GAAG,EAAEC,EAAE,EAAE,SAAS,CAAC;EAC7B;EACA;EACA,aAAaI,GAAGA,CAACC,IAAI,EAAE;IACnB,OAAOT,OAAO,CAAC,SAAS,EAAES,IAAI,CAAC,CAACC,IAAI,CAAC,CAAC,CAACP,GAAG,EAAEC,EAAE,CAAC,KAAK,IAAIE,OAAO,CAACH,GAAG,EAAEC,EAAE,CAAC,CAAC;EAC7E;EACA;EACA,MAAMO,IAAIA,CAAA,EAAG;IACT,OAAOb,MAAM,CAAC,kBAAkB,EAAE;MAAEK,GAAG,EAAE,IAAI,CAACA,GAAG;MAAEE,IAAI,EAAE,IAAI,CAACA;IAAK,CAAC,CAAC;EACzE;EACA;EACA,MAAMO,OAAOA,CAACD,IAAI,EAAE;IAChB,OAAOb,MAAM,CAAC,sBAAsB,EAAE;MAClCK,GAAG,EAAE,IAAI,CAACA,GAAG;MACbE,IAAI,EAAE,IAAI,CAACA,IAAI;MACfM;IACJ,CAAC,CAAC;EACN;EACA;EACA,MAAME,SAASA,CAAA,EAAG;IACd,OAAOf,MAAM,CAAC,wBAAwB,EAAE;MAAEK,GAAG,EAAE,IAAI,CAACA,GAAG;MAAEE,IAAI,EAAE,IAAI,CAACA;IAAK,CAAC,CAAC;EAC/E;EACA;EACA,MAAMS,UAAUA,CAACC,OAAO,EAAE;IACtB,OAAOjB,MAAM,CAAC,yBAAyB,EAAE;MACrCK,GAAG,EAAE,IAAI,CAACA,GAAG;MACbE,IAAI,EAAE,IAAI,CAACA,IAAI;MACfU;IACJ,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,MAAMA,CAACC,KAAK,EAAE;IAChB,OAAOnB,MAAM,CAAC,oBAAoB,EAAE;MAChCK,GAAG,EAAE,IAAI,CAACA,GAAG;MACbE,IAAI,EAAE,IAAI,CAACA,IAAI;MACfY,KAAK,EAAE,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC,EAAEG,GAAG,CAAEC,CAAC,IAAK,KAAK,IAAIA,CAAC,GAAG,CAACA,CAAC,CAAClB,GAAG,EAAEkB,CAAC,CAAChB,IAAI,CAAC,GAAGgB,CAAC;IAC/F,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,OAAOA,CAACL,KAAK,EAAE;IACjB,OAAOnB,MAAM,CAAC,qBAAqB,EAAE;MACjCK,GAAG,EAAE,IAAI,CAACA,GAAG;MACbE,IAAI,EAAE,IAAI,CAACA,IAAI;MACfY,KAAK,EAAE,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC,EAAEG,GAAG,CAAEC,CAAC,IAAK,KAAK,IAAIA,CAAC,GAAG,CAACA,CAAC,CAAClB,GAAG,EAAEkB,CAAC,CAAChB,IAAI,CAAC,GAAGgB,CAAC;IAC/F,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAME,MAAMA,CAACN,KAAK,EAAEO,QAAQ,EAAE;IAC1B,OAAO1B,MAAM,CAAC,oBAAoB,EAAE;MAChCK,GAAG,EAAE,IAAI,CAACA,GAAG;MACbE,IAAI,EAAE,IAAI,CAACA,IAAI;MACfY,KAAK,EAAE,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC,EAAEG,GAAG,CAAEC,CAAC,IAAK,KAAK,IAAIA,CAAC,GAAG,CAACA,CAAC,CAAClB,GAAG,EAAEkB,CAAC,CAAChB,IAAI,CAAC,GAAGgB,CAAC,CAAC;MAC5FG;IACJ,CAAC,CAAC;EACN;EACA;EACA,MAAMC,MAAMA,CAACC,IAAI,EAAE;IACf,OAAO5B,MAAM,CAAC,oBAAoB,EAAE;MAChCK,GAAG,EAAE,IAAI,CAACA,GAAG;MACbE,IAAI,EAAE,IAAI,CAACA,IAAI;MACfqB,IAAI,EAAE,CAACA,IAAI,CAACvB,GAAG,EAAEuB,IAAI,CAACrB,IAAI;IAC9B,CAAC,CAAC;EACN;EACA;EACA,MAAMsB,QAAQA,CAACH,QAAQ,EAAE;IACrB,OAAO1B,MAAM,CAAC,uBAAuB,EAAE;MACnCK,GAAG,EAAE,IAAI,CAACA,GAAG;MACbE,IAAI,EAAE,IAAI,CAACA,IAAI;MACfmB;IACJ,CAAC,CAAC,CAACd,IAAI,CAACR,YAAY,CAAC;EACzB;EACA;EACA,MAAMe,KAAKA,CAAA,EAAG;IACV,OAAOnB,MAAM,CAAC,mBAAmB,EAAE;MAC/BK,GAAG,EAAE,IAAI,CAACA,GAAG;MACbE,IAAI,EAAE,IAAI,CAACA;IACf,CAAC,CAAC,CAACK,IAAI,CAAEW,CAAC,IAAKA,CAAC,CAACD,GAAG,CAAClB,YAAY,CAAC,CAAC;EACvC;EACA;EACA,MAAM0B,GAAGA,CAACxB,EAAE,EAAE;IACV,OAAON,MAAM,CAAC,iBAAiB,EAAE;MAC7BK,GAAG,EAAE,IAAI,CAACA,GAAG;MACbE,IAAI,EAAE,IAAI,CAACA,IAAI;MACfD;IACJ,CAAC,CAAC,CAACM,IAAI,CAAEmB,CAAC,IAAMA,CAAC,GAAG3B,YAAY,CAAC2B,CAAC,CAAC,GAAG,IAAK,CAAC;EAChD;EACA;AACJ;AACA;AACA;AACA;EACI,MAAMC,KAAKA,CAACC,EAAE,EAAEC,MAAM,EAAE;IACpB,IAAIC,EAAE;IACN,OAAOnC,MAAM,CAAC,mBAAmB,EAAE;MAC/BK,GAAG,EAAE,IAAI,CAACA,GAAG;MACbE,IAAI,EAAE,IAAI,CAACA,IAAI;MACf2B,MAAM,EAAE,CAACC,EAAE,GAAGD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACE,KAAK,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,IAAI;MACjHF,EAAE,EAAEA,EAAE,YAAY9B,QAAQ,GAAG8B,EAAE,GAAGA,EAAE,GAAG,IAAI9B,QAAQ,CAAC8B,EAAE,CAAC,GAAG;IAC9D,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMI,wBAAwBA,CAAA,EAAG;IAC7B,OAAOrC,MAAM,CAAC,2CAA2C,EAAE;MACvDK,GAAG,EAAE,IAAI,CAACA;IACd,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMiC,qBAAqBA,CAAA,EAAG;IAC1B,OAAOtC,MAAM,CAAC,wCAAwC,EAAE;MACpDK,GAAG,EAAE,IAAI,CAACA;IACd,CAAC,CAAC;EACN;AACJ;AAEA,SAASG,OAAO,EAAEJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}