{"ast":null,"code":"import { invoke } from './core.js';\nimport { Image } from './image.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/**\n * Bundle type of the current application.\n */\nvar BundleType;\n(function (BundleType) {\n  /** Windows NSIS */\n  BundleType[\"Nsis\"] = \"nsis\";\n  /** Windows MSI */\n  BundleType[\"Msi\"] = \"msi\";\n  /** Linux Debian package */\n  BundleType[\"Deb\"] = \"deb\";\n  /** Linux RPM */\n  BundleType[\"Rpm\"] = \"rpm\";\n  /** Linux AppImage */\n  BundleType[\"AppImage\"] = \"appimage\";\n  /** macOS app bundle */\n  BundleType[\"App\"] = \"app\";\n})(BundleType || (BundleType = {}));\n/**\n * Application metadata and related APIs.\n *\n * @module\n */\n/**\n * Gets the application version.\n * @example\n * ```typescript\n * import { getVersion } from '@tauri-apps/api/app';\n * const appVersion = await getVersion();\n * ```\n *\n * @since 1.0.0\n */\nasync function getVersion() {\n  return invoke('plugin:app|version');\n}\n/**\n * Gets the application name.\n * @example\n * ```typescript\n * import { getName } from '@tauri-apps/api/app';\n * const appName = await getName();\n * ```\n *\n * @since 1.0.0\n */\nasync function getName() {\n  return invoke('plugin:app|name');\n}\n/**\n * Gets the Tauri version.\n *\n * @example\n * ```typescript\n * import { getTauriVersion } from '@tauri-apps/api/app';\n * const tauriVersion = await getTauriVersion();\n * ```\n *\n * @since 1.0.0\n */\nasync function getTauriVersion() {\n  return invoke('plugin:app|tauri_version');\n}\n/**\n * Gets the application identifier.\n * @example\n * ```typescript\n * import { getIdentifier } from '@tauri-apps/api/app';\n * const identifier = await getIdentifier();\n * ```\n *\n * @returns The application identifier as configured in `tauri.conf.json`.\n *\n * @since 2.4.0\n */\nasync function getIdentifier() {\n  return invoke('plugin:app|identifier');\n}\n/**\n * Shows the application on macOS. This function does not automatically focus any specific app window.\n *\n * @example\n * ```typescript\n * import { show } from '@tauri-apps/api/app';\n * await show();\n * ```\n *\n * @since 1.2.0\n */\nasync function show() {\n  return invoke('plugin:app|app_show');\n}\n/**\n * Hides the application on macOS.\n *\n * @example\n * ```typescript\n * import { hide } from '@tauri-apps/api/app';\n * await hide();\n * ```\n *\n * @since 1.2.0\n */\nasync function hide() {\n  return invoke('plugin:app|app_hide');\n}\n/**\n * Fetches the data store identifiers on macOS and iOS.\n *\n * See https://developer.apple.com/documentation/webkit/wkwebsitedatastore for more information.\n *\n * @example\n * ```typescript\n * import { fetchDataStoreIdentifiers } from '@tauri-apps/api/app';\n * const ids = await fetchDataStoreIdentifiers();\n * ```\n *\n * @since 2.4.0\n */\nasync function fetchDataStoreIdentifiers() {\n  return invoke('plugin:app|fetch_data_store_identifiers');\n}\n/**\n * Removes the data store with the given identifier.\n *\n * Note that any webview using this data store should be closed before running this API.\n *\n * See https://developer.apple.com/documentation/webkit/wkwebsitedatastore for more information.\n *\n * @example\n * ```typescript\n * import { fetchDataStoreIdentifiers, removeDataStore } from '@tauri-apps/api/app';\n * for (const id of (await fetchDataStoreIdentifiers())) {\n *  await removeDataStore(id);\n * }\n * ```\n *\n * @since 2.4.0\n */\nasync function removeDataStore(uuid) {\n  return invoke('plugin:app|remove_data_store', {\n    uuid\n  });\n}\n/**\n * Get the default window icon.\n *\n * @example\n * ```typescript\n * import { defaultWindowIcon } from '@tauri-apps/api/app';\n * await defaultWindowIcon();\n * ```\n *\n * @since 2.0.0\n */\nasync function defaultWindowIcon() {\n  return invoke('plugin:app|default_window_icon').then(rid => rid ? new Image(rid) : null);\n}\n/**\n * Set app's theme, pass in `null` or `undefined` to follow system theme\n *\n * @example\n * ```typescript\n * import { setTheme } from '@tauri-apps/api/app';\n * await setTheme('dark');\n * ```\n *\n * #### Platform-specific\n *\n * - **iOS / Android:** Unsupported.\n *\n * @since 2.0.0\n */\nasync function setTheme(theme) {\n  return invoke('plugin:app|set_app_theme', {\n    theme\n  });\n}\n/**\n * Sets the dock visibility for the application on macOS.\n *\n * @param visible whether the dock should be visible or not\n * @since 2.5.0\n */\nasync function setDockVisibility(visible) {\n  return invoke('plugin:app|set_dock_visibility', {\n    visible\n  });\n}\nasync function getBundleType() {\n  return invoke('plugin:app|bundle_type');\n}\nexport { BundleType, defaultWindowIcon, fetchDataStoreIdentifiers, getBundleType, getIdentifier, getName, getTauriVersion, getVersion, hide, removeDataStore, setDockVisibility, setTheme, show };","map":{"version":3,"names":["invoke","Image","BundleType","getVersion","getName","getTauriVersion","getIdentifier","show","hide","fetchDataStoreIdentifiers","removeDataStore","uuid","defaultWindowIcon","then","rid","setTheme","theme","setDockVisibility","visible","getBundleType"],"sources":["C:/Users/lhaveman/email-generator/node_modules/@tauri-apps/api/app.js"],"sourcesContent":["import { invoke } from './core.js';\nimport { Image } from './image.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/**\n * Bundle type of the current application.\n */\nvar BundleType;\n(function (BundleType) {\n    /** Windows NSIS */\n    BundleType[\"Nsis\"] = \"nsis\";\n    /** Windows MSI */\n    BundleType[\"Msi\"] = \"msi\";\n    /** Linux Debian package */\n    BundleType[\"Deb\"] = \"deb\";\n    /** Linux RPM */\n    BundleType[\"Rpm\"] = \"rpm\";\n    /** Linux AppImage */\n    BundleType[\"AppImage\"] = \"appimage\";\n    /** macOS app bundle */\n    BundleType[\"App\"] = \"app\";\n})(BundleType || (BundleType = {}));\n/**\n * Application metadata and related APIs.\n *\n * @module\n */\n/**\n * Gets the application version.\n * @example\n * ```typescript\n * import { getVersion } from '@tauri-apps/api/app';\n * const appVersion = await getVersion();\n * ```\n *\n * @since 1.0.0\n */\nasync function getVersion() {\n    return invoke('plugin:app|version');\n}\n/**\n * Gets the application name.\n * @example\n * ```typescript\n * import { getName } from '@tauri-apps/api/app';\n * const appName = await getName();\n * ```\n *\n * @since 1.0.0\n */\nasync function getName() {\n    return invoke('plugin:app|name');\n}\n/**\n * Gets the Tauri version.\n *\n * @example\n * ```typescript\n * import { getTauriVersion } from '@tauri-apps/api/app';\n * const tauriVersion = await getTauriVersion();\n * ```\n *\n * @since 1.0.0\n */\nasync function getTauriVersion() {\n    return invoke('plugin:app|tauri_version');\n}\n/**\n * Gets the application identifier.\n * @example\n * ```typescript\n * import { getIdentifier } from '@tauri-apps/api/app';\n * const identifier = await getIdentifier();\n * ```\n *\n * @returns The application identifier as configured in `tauri.conf.json`.\n *\n * @since 2.4.0\n */\nasync function getIdentifier() {\n    return invoke('plugin:app|identifier');\n}\n/**\n * Shows the application on macOS. This function does not automatically focus any specific app window.\n *\n * @example\n * ```typescript\n * import { show } from '@tauri-apps/api/app';\n * await show();\n * ```\n *\n * @since 1.2.0\n */\nasync function show() {\n    return invoke('plugin:app|app_show');\n}\n/**\n * Hides the application on macOS.\n *\n * @example\n * ```typescript\n * import { hide } from '@tauri-apps/api/app';\n * await hide();\n * ```\n *\n * @since 1.2.0\n */\nasync function hide() {\n    return invoke('plugin:app|app_hide');\n}\n/**\n * Fetches the data store identifiers on macOS and iOS.\n *\n * See https://developer.apple.com/documentation/webkit/wkwebsitedatastore for more information.\n *\n * @example\n * ```typescript\n * import { fetchDataStoreIdentifiers } from '@tauri-apps/api/app';\n * const ids = await fetchDataStoreIdentifiers();\n * ```\n *\n * @since 2.4.0\n */\nasync function fetchDataStoreIdentifiers() {\n    return invoke('plugin:app|fetch_data_store_identifiers');\n}\n/**\n * Removes the data store with the given identifier.\n *\n * Note that any webview using this data store should be closed before running this API.\n *\n * See https://developer.apple.com/documentation/webkit/wkwebsitedatastore for more information.\n *\n * @example\n * ```typescript\n * import { fetchDataStoreIdentifiers, removeDataStore } from '@tauri-apps/api/app';\n * for (const id of (await fetchDataStoreIdentifiers())) {\n *  await removeDataStore(id);\n * }\n * ```\n *\n * @since 2.4.0\n */\nasync function removeDataStore(uuid) {\n    return invoke('plugin:app|remove_data_store', { uuid });\n}\n/**\n * Get the default window icon.\n *\n * @example\n * ```typescript\n * import { defaultWindowIcon } from '@tauri-apps/api/app';\n * await defaultWindowIcon();\n * ```\n *\n * @since 2.0.0\n */\nasync function defaultWindowIcon() {\n    return invoke('plugin:app|default_window_icon').then((rid) => rid ? new Image(rid) : null);\n}\n/**\n * Set app's theme, pass in `null` or `undefined` to follow system theme\n *\n * @example\n * ```typescript\n * import { setTheme } from '@tauri-apps/api/app';\n * await setTheme('dark');\n * ```\n *\n * #### Platform-specific\n *\n * - **iOS / Android:** Unsupported.\n *\n * @since 2.0.0\n */\nasync function setTheme(theme) {\n    return invoke('plugin:app|set_app_theme', { theme });\n}\n/**\n * Sets the dock visibility for the application on macOS.\n *\n * @param visible whether the dock should be visible or not\n * @since 2.5.0\n */\nasync function setDockVisibility(visible) {\n    return invoke('plugin:app|set_dock_visibility', { visible });\n}\nasync function getBundleType() {\n    return invoke('plugin:app|bundle_type');\n}\n\nexport { BundleType, defaultWindowIcon, fetchDataStoreIdentifiers, getBundleType, getIdentifier, getName, getTauriVersion, getVersion, hide, removeDataStore, setDockVisibility, setTheme, show };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,WAAW;AAClC,SAASC,KAAK,QAAQ,YAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAU;AACd,CAAC,UAAUA,UAAU,EAAE;EACnB;EACAA,UAAU,CAAC,MAAM,CAAC,GAAG,MAAM;EAC3B;EACAA,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK;EACzB;EACAA,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK;EACzB;EACAA,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK;EACzB;EACAA,UAAU,CAAC,UAAU,CAAC,GAAG,UAAU;EACnC;EACAA,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK;AAC7B,CAAC,EAAEA,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,UAAUA,CAAA,EAAG;EACxB,OAAOH,MAAM,CAAC,oBAAoB,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeI,OAAOA,CAAA,EAAG;EACrB,OAAOJ,MAAM,CAAC,iBAAiB,CAAC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeK,eAAeA,CAAA,EAAG;EAC7B,OAAOL,MAAM,CAAC,0BAA0B,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeM,aAAaA,CAAA,EAAG;EAC3B,OAAON,MAAM,CAAC,uBAAuB,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeO,IAAIA,CAAA,EAAG;EAClB,OAAOP,MAAM,CAAC,qBAAqB,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeQ,IAAIA,CAAA,EAAG;EAClB,OAAOR,MAAM,CAAC,qBAAqB,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeS,yBAAyBA,CAAA,EAAG;EACvC,OAAOT,MAAM,CAAC,yCAAyC,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeU,eAAeA,CAACC,IAAI,EAAE;EACjC,OAAOX,MAAM,CAAC,8BAA8B,EAAE;IAAEW;EAAK,CAAC,CAAC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,iBAAiBA,CAAA,EAAG;EAC/B,OAAOZ,MAAM,CAAC,gCAAgC,CAAC,CAACa,IAAI,CAAEC,GAAG,IAAKA,GAAG,GAAG,IAAIb,KAAK,CAACa,GAAG,CAAC,GAAG,IAAI,CAAC;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,QAAQA,CAACC,KAAK,EAAE;EAC3B,OAAOhB,MAAM,CAAC,0BAA0B,EAAE;IAAEgB;EAAM,CAAC,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,iBAAiBA,CAACC,OAAO,EAAE;EACtC,OAAOlB,MAAM,CAAC,gCAAgC,EAAE;IAAEkB;EAAQ,CAAC,CAAC;AAChE;AACA,eAAeC,aAAaA,CAAA,EAAG;EAC3B,OAAOnB,MAAM,CAAC,wBAAwB,CAAC;AAC3C;AAEA,SAASE,UAAU,EAAEU,iBAAiB,EAAEH,yBAAyB,EAAEU,aAAa,EAAEb,aAAa,EAAEF,OAAO,EAAEC,eAAe,EAAEF,UAAU,EAAEK,IAAI,EAAEE,eAAe,EAAEO,iBAAiB,EAAEF,QAAQ,EAAER,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}