{"ast":null,"code":"// src/components/TemplateList/TemplateList.tsx\nimport React,{useEffect,useMemo,useState,useCallback}from'react';import{core}from'@tauri-apps/api';import TemplateCard from'../TemplateCard/TemplateCard';import styles from'./TemplateList.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function normalizeFavourites(input){// Accept string[] or legacy map<string, boolean>\nconst set=new Set();if(Array.isArray(input)){input.forEach(s=>typeof s==='string'&&set.add(s));}else if(input&&typeof input==='object'){for(const[k,v]of Object.entries(input)){if(v)set.add(k);}}return set;}const TemplateList=_ref=>{let{selectedName,onSelectTemplate}=_ref;const[templates,setTemplates]=useState([]);const[favourites,setFavourites]=useState(new Set());const[search,setSearch]=useState('');const[error,setError]=useState(null);// Load templates + favourites on mount\nuseEffect(()=>{core.invoke('load_templates').then(setTemplates).catch(err=>{console.error(err);setError('Failed to load templates');});core.invoke('load_favourites').then(data=>setFavourites(normalizeFavourites(data))).catch(err=>{console.error(err);setError(prev=>prev!==null&&prev!==void 0?prev:'Failed to load favourites');});},[]);const toggleFavourite=useCallback(async filename=>{const next=new Set(favourites);if(next.has(filename))next.delete(filename);else next.add(filename);setFavourites(next);// Save ONLY an array => resolves the TODO\ntry{await core.invoke('save_favourites',{favourites:Array.from(next)});}catch(err){console.error('Failed to save favourites',err);}},[favourites]);const filteredSorted=useMemo(()=>{const q=search.trim().toLowerCase();const list=q?templates.filter(t=>t.name.toLowerCase().includes(q)||t.content.toLowerCase().includes(q)):templates.slice();list.sort((a,b)=>{const af=favourites.has(a.name)?0:1;const bf=favourites.has(b.name)?0:1;if(af!==bf)return af-bf;return a.name.localeCompare(b.name);});return list;},[templates,favourites,search]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.header,children:[/*#__PURE__*/_jsx(\"h4\",{className:styles.heading,children:\"Templates\"}),/*#__PURE__*/_jsx(\"input\",{type:\"search\",placeholder:\"Search templates\\u2026\",className:styles.search,value:search,onChange:e=>setSearch(e.target.value)})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:styles.error,children:error}),/*#__PURE__*/_jsx(\"div\",{className:styles.list,children:filteredSorted.map(t=>/*#__PURE__*/_jsx(TemplateCard,{name:t.name,content:t.content,last_modified:t.last_modified,isFavourite:favourites.has(t.name),selected:selectedName===t.name,onSelect:()=>onSelectTemplate(t),onToggleFavourite:toggleFavourite},t.name))})]});};export default TemplateList;","map":{"version":3,"names":["React","useEffect","useMemo","useState","useCallback","core","TemplateCard","styles","jsx","_jsx","jsxs","_jsxs","normalizeFavourites","input","set","Set","Array","isArray","forEach","s","add","k","v","Object","entries","TemplateList","_ref","selectedName","onSelectTemplate","templates","setTemplates","favourites","setFavourites","search","setSearch","error","setError","invoke","then","catch","err","console","data","prev","toggleFavourite","filename","next","has","delete","from","filteredSorted","q","trim","toLowerCase","list","filter","t","name","includes","content","slice","sort","a","b","af","bf","localeCompare","className","container","children","header","heading","type","placeholder","value","onChange","e","target","map","last_modified","isFavourite","selected","onSelect","onToggleFavourite"],"sources":["C:/Users/lhaveman/email-generator/src/components/TemplateList/TemplateList.tsx"],"sourcesContent":["// src/components/TemplateList/TemplateList.tsx\r\nimport React, { useEffect, useMemo, useState, useCallback } from 'react';\r\nimport { core } from '@tauri-apps/api';\r\nimport TemplateCard from '../TemplateCard/TemplateCard';\r\nimport styles from './TemplateList.module.css';\r\n\r\nexport type TemplateFile = {\r\n  name: string;\r\n  content: string;\r\n  last_modified: string;\r\n};\r\n\r\nfunction normalizeFavourites(input: unknown): Set<string> {\r\n  // Accept string[] or legacy map<string, boolean>\r\n  const set = new Set<string>();\r\n  if (Array.isArray(input)) {\r\n    input.forEach((s) => typeof s === 'string' && set.add(s));\r\n  } else if (input && typeof input === 'object') {\r\n    for (const [k, v] of Object.entries(input as Record<string, unknown>)) {\r\n      if (v) set.add(k);\r\n    }\r\n  }\r\n  return set;\r\n}\r\n\r\ninterface TemplateListProps {\r\n  selectedName: string | null;\r\n  onSelectTemplate: (tpl: TemplateFile) => void;\r\n}\r\n\r\nconst TemplateList: React.FC<TemplateListProps> = ({ selectedName, onSelectTemplate }) => {\r\n  const [templates, setTemplates] = useState<TemplateFile[]>([]);\r\n  const [favourites, setFavourites] = useState<Set<string>>(new Set());\r\n  const [search, setSearch] = useState('');\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Load templates + favourites on mount\r\n  useEffect(() => {\r\n    core.invoke<TemplateFile[]>('load_templates')\r\n      .then(setTemplates)\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setError('Failed to load templates');\r\n      });\r\n\r\n    core.invoke<unknown>('load_favourites')\r\n      .then((data) => setFavourites(normalizeFavourites(data)))\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setError((prev) => prev ?? 'Failed to load favourites');\r\n      });\r\n  }, []);\r\n\r\n  const toggleFavourite = useCallback(async (filename: string) => {\r\n    const next = new Set(favourites);\r\n    if (next.has(filename)) next.delete(filename);\r\n    else next.add(filename);\r\n    setFavourites(next);\r\n\r\n    // Save ONLY an array => resolves the TODO\r\n    try {\r\n      await core.invoke('save_favourites', { favourites: Array.from(next) });\r\n    } catch (err) {\r\n      console.error('Failed to save favourites', err);\r\n    }\r\n  }, [favourites]);\r\n\r\n  const filteredSorted = useMemo(() => {\r\n    const q = search.trim().toLowerCase();\r\n    const list = q\r\n      ? templates.filter(t =>\r\n          t.name.toLowerCase().includes(q) ||\r\n          t.content.toLowerCase().includes(q)\r\n        )\r\n      : templates.slice();\r\n\r\n    list.sort((a, b) => {\r\n      const af = favourites.has(a.name) ? 0 : 1;\r\n      const bf = favourites.has(b.name) ? 0 : 1;\r\n      if (af !== bf) return af - bf;\r\n      return a.name.localeCompare(b.name);\r\n    });\r\n    return list;\r\n  }, [templates, favourites, search]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>\r\n        <h4 className={styles.heading}>Templates</h4>\r\n        <input\r\n          type=\"search\"\r\n          placeholder=\"Search templatesâ€¦\"\r\n          className={styles.search}\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {error && <div className={styles.error}>{error}</div>}\r\n\r\n      <div className={styles.list}>\r\n        {filteredSorted.map((t) => (\r\n          <TemplateCard\r\n            key={t.name}\r\n            name={t.name}\r\n            content={t.content}\r\n            last_modified={t.last_modified}\r\n            isFavourite={favourites.has(t.name)}\r\n            selected={selectedName === t.name}\r\n            onSelect={() => onSelectTemplate(t)}\r\n            onToggleFavourite={toggleFavourite}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TemplateList;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,OAAO,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CACxE,OAASC,IAAI,KAAQ,iBAAiB,CACtC,MAAO,CAAAC,YAAY,KAAM,8BAA8B,CACvD,MAAO,CAAAC,MAAM,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAQ/C,QAAS,CAAAC,mBAAmBA,CAACC,KAAc,CAAe,CACxD;AACA,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,GAAG,CAAS,CAAC,CAC7B,GAAIC,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,CAAE,CACxBA,KAAK,CAACK,OAAO,CAAEC,CAAC,EAAK,MAAO,CAAAA,CAAC,GAAK,QAAQ,EAAIL,GAAG,CAACM,GAAG,CAACD,CAAC,CAAC,CAAC,CAC3D,CAAC,IAAM,IAAIN,KAAK,EAAI,MAAO,CAAAA,KAAK,GAAK,QAAQ,CAAE,CAC7C,IAAK,KAAM,CAACQ,CAAC,CAAEC,CAAC,CAAC,EAAI,CAAAC,MAAM,CAACC,OAAO,CAACX,KAAgC,CAAC,CAAE,CACrE,GAAIS,CAAC,CAAER,GAAG,CAACM,GAAG,CAACC,CAAC,CAAC,CACnB,CACF,CACA,MAAO,CAAAP,GAAG,CACZ,CAOA,KAAM,CAAAW,YAAyC,CAAGC,IAAA,EAAwC,IAAvC,CAAEC,YAAY,CAAEC,gBAAiB,CAAC,CAAAF,IAAA,CACnF,KAAM,CAACG,SAAS,CAAEC,YAAY,CAAC,CAAG3B,QAAQ,CAAiB,EAAE,CAAC,CAC9D,KAAM,CAAC4B,UAAU,CAAEC,aAAa,CAAC,CAAG7B,QAAQ,CAAc,GAAI,CAAAY,GAAG,CAAC,CAAC,CAAC,CACpE,KAAM,CAACkB,MAAM,CAAEC,SAAS,CAAC,CAAG/B,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACgC,KAAK,CAAEC,QAAQ,CAAC,CAAGjC,QAAQ,CAAgB,IAAI,CAAC,CAEvD;AACAF,SAAS,CAAC,IAAM,CACdI,IAAI,CAACgC,MAAM,CAAiB,gBAAgB,CAAC,CAC1CC,IAAI,CAACR,YAAY,CAAC,CAClBS,KAAK,CAAEC,GAAG,EAAK,CACdC,OAAO,CAACN,KAAK,CAACK,GAAG,CAAC,CAClBJ,QAAQ,CAAC,0BAA0B,CAAC,CACtC,CAAC,CAAC,CAEJ/B,IAAI,CAACgC,MAAM,CAAU,iBAAiB,CAAC,CACpCC,IAAI,CAAEI,IAAI,EAAKV,aAAa,CAACpB,mBAAmB,CAAC8B,IAAI,CAAC,CAAC,CAAC,CACxDH,KAAK,CAAEC,GAAG,EAAK,CACdC,OAAO,CAACN,KAAK,CAACK,GAAG,CAAC,CAClBJ,QAAQ,CAAEO,IAAI,EAAKA,IAAI,SAAJA,IAAI,UAAJA,IAAI,CAAI,2BAA2B,CAAC,CACzD,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,eAAe,CAAGxC,WAAW,CAAC,KAAO,CAAAyC,QAAgB,EAAK,CAC9D,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAA/B,GAAG,CAACgB,UAAU,CAAC,CAChC,GAAIe,IAAI,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAEC,IAAI,CAACE,MAAM,CAACH,QAAQ,CAAC,CAAC,IACzC,CAAAC,IAAI,CAAC1B,GAAG,CAACyB,QAAQ,CAAC,CACvBb,aAAa,CAACc,IAAI,CAAC,CAEnB;AACA,GAAI,CACF,KAAM,CAAAzC,IAAI,CAACgC,MAAM,CAAC,iBAAiB,CAAE,CAAEN,UAAU,CAAEf,KAAK,CAACiC,IAAI,CAACH,IAAI,CAAE,CAAC,CAAC,CACxE,CAAE,MAAON,GAAG,CAAE,CACZC,OAAO,CAACN,KAAK,CAAC,2BAA2B,CAAEK,GAAG,CAAC,CACjD,CACF,CAAC,CAAE,CAACT,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAAmB,cAAc,CAAGhD,OAAO,CAAC,IAAM,CACnC,KAAM,CAAAiD,CAAC,CAAGlB,MAAM,CAACmB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACrC,KAAM,CAAAC,IAAI,CAAGH,CAAC,CACVtB,SAAS,CAAC0B,MAAM,CAACC,CAAC,EAChBA,CAAC,CAACC,IAAI,CAACJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACP,CAAC,CAAC,EAChCK,CAAC,CAACG,OAAO,CAACN,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACP,CAAC,CACpC,CAAC,CACDtB,SAAS,CAAC+B,KAAK,CAAC,CAAC,CAErBN,IAAI,CAACO,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CAClB,KAAM,CAAAC,EAAE,CAAGjC,UAAU,CAACgB,GAAG,CAACe,CAAC,CAACL,IAAI,CAAC,CAAG,CAAC,CAAG,CAAC,CACzC,KAAM,CAAAQ,EAAE,CAAGlC,UAAU,CAACgB,GAAG,CAACgB,CAAC,CAACN,IAAI,CAAC,CAAG,CAAC,CAAG,CAAC,CACzC,GAAIO,EAAE,GAAKC,EAAE,CAAE,MAAO,CAAAD,EAAE,CAAGC,EAAE,CAC7B,MAAO,CAAAH,CAAC,CAACL,IAAI,CAACS,aAAa,CAACH,CAAC,CAACN,IAAI,CAAC,CACrC,CAAC,CAAC,CACF,MAAO,CAAAH,IAAI,CACb,CAAC,CAAE,CAACzB,SAAS,CAAEE,UAAU,CAAEE,MAAM,CAAC,CAAC,CAEnC,mBACEtB,KAAA,QAAKwD,SAAS,CAAE5D,MAAM,CAAC6D,SAAU,CAAAC,QAAA,eAC/B1D,KAAA,QAAKwD,SAAS,CAAE5D,MAAM,CAAC+D,MAAO,CAAAD,QAAA,eAC5B5D,IAAA,OAAI0D,SAAS,CAAE5D,MAAM,CAACgE,OAAQ,CAAAF,QAAA,CAAC,WAAS,CAAI,CAAC,cAC7C5D,IAAA,UACE+D,IAAI,CAAC,QAAQ,CACbC,WAAW,CAAC,wBAAmB,CAC/BN,SAAS,CAAE5D,MAAM,CAAC0B,MAAO,CACzByC,KAAK,CAAEzC,MAAO,CACd0C,QAAQ,CAAGC,CAAC,EAAK1C,SAAS,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC5C,CAAC,EACC,CAAC,CAELvC,KAAK,eAAI1B,IAAA,QAAK0D,SAAS,CAAE5D,MAAM,CAAC4B,KAAM,CAAAkC,QAAA,CAAElC,KAAK,CAAM,CAAC,cAErD1B,IAAA,QAAK0D,SAAS,CAAE5D,MAAM,CAAC+C,IAAK,CAAAe,QAAA,CACzBnB,cAAc,CAAC4B,GAAG,CAAEtB,CAAC,eACpB/C,IAAA,CAACH,YAAY,EAEXmD,IAAI,CAAED,CAAC,CAACC,IAAK,CACbE,OAAO,CAAEH,CAAC,CAACG,OAAQ,CACnBoB,aAAa,CAAEvB,CAAC,CAACuB,aAAc,CAC/BC,WAAW,CAAEjD,UAAU,CAACgB,GAAG,CAACS,CAAC,CAACC,IAAI,CAAE,CACpCwB,QAAQ,CAAEtD,YAAY,GAAK6B,CAAC,CAACC,IAAK,CAClCyB,QAAQ,CAAEA,CAAA,GAAMtD,gBAAgB,CAAC4B,CAAC,CAAE,CACpC2B,iBAAiB,CAAEvC,eAAgB,EAP9BY,CAAC,CAACC,IAQR,CACF,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}