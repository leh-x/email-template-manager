{"ast":null,"code":"import { MenuItemBase, newMenu } from './base.js';\nimport { invoke } from '../core.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/** A predefined (native) menu item which has a predefined behavior by the OS or by tauri.  */\nclass PredefinedMenuItem extends MenuItemBase {\n  /** @ignore */\n  constructor(rid, id) {\n    super(rid, id, 'Predefined');\n  }\n  /** Create a new predefined menu item. */\n  static async new(opts) {\n    return newMenu('Predefined', opts).then(([rid, id]) => new PredefinedMenuItem(rid, id));\n  }\n  /** Returns the text of this predefined menu item. */\n  async text() {\n    return invoke('plugin:menu|text', {\n      rid: this.rid,\n      kind: this.kind\n    });\n  }\n  /** Sets the text for this predefined menu item. */\n  async setText(text) {\n    return invoke('plugin:menu|set_text', {\n      rid: this.rid,\n      kind: this.kind,\n      text\n    });\n  }\n}\nexport { PredefinedMenuItem };","map":{"version":3,"names":["MenuItemBase","newMenu","invoke","PredefinedMenuItem","constructor","rid","id","new","opts","then","text","kind","setText"],"sources":["C:/Users/lhaveman/email-generator/node_modules/@tauri-apps/api/menu/predefinedMenuItem.js"],"sourcesContent":["import { MenuItemBase, newMenu } from './base.js';\nimport { invoke } from '../core.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/** A predefined (native) menu item which has a predefined behavior by the OS or by tauri.  */\nclass PredefinedMenuItem extends MenuItemBase {\n    /** @ignore */\n    constructor(rid, id) {\n        super(rid, id, 'Predefined');\n    }\n    /** Create a new predefined menu item. */\n    static async new(opts) {\n        return newMenu('Predefined', opts).then(([rid, id]) => new PredefinedMenuItem(rid, id));\n    }\n    /** Returns the text of this predefined menu item. */\n    async text() {\n        return invoke('plugin:menu|text', { rid: this.rid, kind: this.kind });\n    }\n    /** Sets the text for this predefined menu item. */\n    async setText(text) {\n        return invoke('plugin:menu|set_text', {\n            rid: this.rid,\n            kind: this.kind,\n            text\n        });\n    }\n}\n\nexport { PredefinedMenuItem };\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,OAAO,QAAQ,WAAW;AACjD,SAASC,MAAM,QAAQ,YAAY;;AAEnC;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,SAASH,YAAY,CAAC;EAC1C;EACAI,WAAWA,CAACC,GAAG,EAAEC,EAAE,EAAE;IACjB,KAAK,CAACD,GAAG,EAAEC,EAAE,EAAE,YAAY,CAAC;EAChC;EACA;EACA,aAAaC,GAAGA,CAACC,IAAI,EAAE;IACnB,OAAOP,OAAO,CAAC,YAAY,EAAEO,IAAI,CAAC,CAACC,IAAI,CAAC,CAAC,CAACJ,GAAG,EAAEC,EAAE,CAAC,KAAK,IAAIH,kBAAkB,CAACE,GAAG,EAAEC,EAAE,CAAC,CAAC;EAC3F;EACA;EACA,MAAMI,IAAIA,CAAA,EAAG;IACT,OAAOR,MAAM,CAAC,kBAAkB,EAAE;MAAEG,GAAG,EAAE,IAAI,CAACA,GAAG;MAAEM,IAAI,EAAE,IAAI,CAACA;IAAK,CAAC,CAAC;EACzE;EACA;EACA,MAAMC,OAAOA,CAACF,IAAI,EAAE;IAChB,OAAOR,MAAM,CAAC,sBAAsB,EAAE;MAClCG,GAAG,EAAE,IAAI,CAACA,GAAG;MACbM,IAAI,EAAE,IAAI,CAACA,IAAI;MACfD;IACJ,CAAC,CAAC;EACN;AACJ;AAEA,SAASP,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}